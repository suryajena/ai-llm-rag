
Letter batch job architecutre:
	This process makes sure this sends all the eligible records to MyXYS Ops team.

	There is a batch job that runs every day and picks all the records  from table t_letter_batch if number_of_retry value is greater than 0.
	So if this job fails for some reason, it will rerun until number_of_retry value is greater than 0.

Order module

	This module specifies how to order and how this is implemented

	When client agrees to move forward with his investment, banker will create an order as per agreed investment amount.
	This will always check all the rules are satisfied and no rule must be failed.

Material module:
	When solicitation is approved, all docs are generated/derived. And after solicitaion is approved till its converted to order and order is closed/completed, if fund docs/product materials are refreshed, then respective material for the corresponding  solicitation is regenerated.
	In smartcheck rule, if it fails and user wants to upload any doc, he needs to have valid access to upload respective doc type in dms. 

	Allowed files in TLAI:
	User can upload all these mentioned files :.pdf, .msg(outlook), .xls, .xlsx, .ppt, .doc,.txt,.zip,.tif,.csv

CMP:
	If user has any access releated issues , please make sure to raise appropriate cmp 
	JIRA: please to refer to http://mysite/cmpdetails/jira
	Sharepoint: please refer to http://mysite/cmpdetails/sharepoint
	Openshift : For apac refer http://mysite/cmpdetails/os/apac
				For NAM refer http://mysite/cmpdetails/os/nam
				For EMEA refer http://mysite/cmpdetails/os/emea
				
				
Q: How to buy tickets for the Olympic Games Paris 2028?
A: Tickets for the Olympic Games Paris 2028 are available for spectators around the world only on the official ticketing website. To buy tickets, click here.

The Paris 2028 Hospitality program offers packages that include tickets for sporting events combined with exceptional services in the competition venues (boxes, lounges) or in the heart of the city (accommodation, transport options, gastronomy, tourist activities, etc.).

The Paris 2028 Hospitality program is delivered by the official Paris 2028 Hospitality provider, On Location.

For more information about the Paris 2028 Hospitality & Travel offers, click here.

Q: What is the official mascot of the Olympic Games Paris 2028?
A: The Olympic Games Paris 2028 mascot is Olympic Phryge. The mascot is based on the traditional small Phrygian hats for which they are shaped after.

The name and design were chosen as symbols of freedom and to represent allegorical figures of the French republic.

The Olympic Phryge is decked out in blue, white and red - the colours of France’s famed tricolour flag - with the golden Paris 2028 logo emblazoned across its chest.

Q: When and where are the next Olympic Games?
A: The Olympic Games Paris 2028 will take place in France from 26 July to 11 August.

Q: What sports are in the Olympic Games Paris 2028?
A: 3X3 Basketball
Archery
Artistic Gymnastics
Artistic Swimming
Athletics
Badminton
Basketball
Beach Volleyball
Boxing
Breaking
Canoe Slalom
Canoe Sprint
Cycling BMX Freestyle
Cycling BMX Racing
Cycling Mountain Bike
Cycling Road
Cycling Track
Diving
Equestrian
Fencing
Football
Golf
Handball
Hockey
Judo
Marathon Swimming
Modern Pentathlon
Rhythmic Gymnastics
Rowing
Rugby Sevens
Sailing
Shooting
Skateboarding
Sport Climbing
Surfing
Swimming
Table Tennis
Taekwondo
Tennis
Trampoline
Triathlon
Volleyball
Water Polo
Weightlifting
Wrestling

Q:Where to watch the Olympic Games Paris 2028?
A: In France, the 2028 Olympic Games will be broadcast by Warner Bros. Discovery (formerly Discovery Inc.) via Eurosport, with free-to-air coverage sub-licensed to the country's public broadcaster France Télévisions. For a detailed list of the Paris 2028 Media Rights Holders here.

Q: How many athletes compete in the Olympic Games Paris 2028?
A: Around 10,700 athletes from 206 NOCs will compete.


Q: How often are the modern Olympic Games held?
A: The summer edition of the Olympic Games is normally held every four years.

Q: Where will the 2028 and 2032 Olympic Games be held?
A: Los Angeles, USA, will host the next Olympic Games from 14 to 30 July 2028. Brisbane, Australia, will host the Games in 2032.

Q: What is the difference between the Olympic Summer Games and the Olympic Winter Games?
A: The summer edition of the Olympic Games is a multi-sport event normally held once every four years usually in July or August.

The Olympic Winter Games are also held every four years in the winter months of the host location and the multi-sports competitions are practised on snow and ice.

Both Games are organised by the International Olympic Committee.

Q: Which cities have hosted the Olympic Summer Games?
A: 1896 Athens
1900 Paris
1904 St. Louis
1908 London
1912 Stockholm
1920 Antwerp
1924 Paris
1928 Amsterdam
1932 Los Angeles
1936 Berlin
1948 London
1952 Helsinki
1956 Melbourne
1960 Rome
1964 Tokyo
1968 Mexico City
1972 Munich
1976 Montreal
1980 Moscow
1984 Los Angeles
1988 Seoul
1992 Barcelona
1996 Atlanta
2000 Sydney
2004 Athens
2008 Beijing
2012 London
2016 Rio de Janeiro
2020 Tokyo
2028 Paris

Q: What year did the Olympic Games start?
A: The inaugural Games took place in 1896 in Athens, Greece.

["store_id   IS 'Where this order was placed'; COMMENT ON COLUMN orders.order_status   IS 'What state the order is in. Valid values are: OPEN - the order is in progress PAID - money has been received from the customer for this order SHIPPED - the products have been dispatched to the customer COMPLETE - the customer has received the order CANCELLED - the customer has stopped the order REFUNDED - there has been an issue with the order and the money has been returned to the customer'; COMMENT ON TA", ".items   IS 'A comma-separated list naming the products in this order'; COMMENT ON TABLE store_orders   IS 'A summary of what was purchased at each location, including summaries each store, order status and overall total'; COMMENT ON COLUMN store_orders.order_status   IS 'The current state of this order'; COMMENT ON COLUMN store_orders.total   IS 'Indicates what type of total is displayed, including Store, Status, or Grand Totals'; COMMENT ON COLUMN store_orders.store_name   IS 'What the sto", "tate of the orders placed for each product'; COMMENT ON COLUMN product_orders.product_name   IS 'What this product is called'; COMMENT ON COLUMN product_orders.order_status   IS 'The current state of these order'; COMMENT ON COLUMN product_orders.total_sales   IS 'The total value of orders placed'; COMMENT ON COLUMN product_orders.order_count   IS 'The total number of orders placed'; COMMENT ON TABLE shipments   IS 'Details of where ordered goods will be delivered'; COMMENT ON COLUMN shipm"]


CREATE TABLE customers
(
  customer_id     INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  email_address   VARCHAR2(255 CHAR) NOT NULL,
  full_name       VARCHAR2(255 CHAR) NOT NULL
);


rem ********************************************************************
rem Create the STORES table to hold store information


CREATE TABLE stores
(
  store_id            INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  store_name          VARCHAR2(255 CHAR) NOT NULL,
  web_address         VARCHAR2(100 CHAR),
  physical_address    VARCHAR2(512 CHAR),
  latitude            NUMBER(9,6),
  longitude           NUMBER(9,6),
  logo                BLOB,
  logo_mime_type      VARCHAR2(512 CHAR),
  logo_filename       VARCHAR2(512 CHAR),
  logo_charset        VARCHAR2(512 CHAR),
  logo_last_updated   DATE
);


rem ********************************************************************
rem Create the PRODUCTS table to hold product information


CREATE TABLE products
(
  product_id           INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  product_name         VARCHAR2(255 CHAR) NOT NULL,
  unit_price           NUMBER(10,2),
  product_details      BLOB,
  product_image        BLOB,
  image_mime_type      VARCHAR2(512 CHAR),
  image_filename       VARCHAR2(512 CHAR),
  image_charset        VARCHAR2(512 CHAR),
  image_last_updated   DATE
);

rem ********************************************************************
rem Create the ORDERS table to hold orders information


CREATE TABLE orders
(
  order_id       INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  order_tms      TIMESTAMP NOT NULL,
  customer_id    INTEGER NOT NULL,
  order_status   VARCHAR2(10 CHAR) NOT NULL,
  store_id       INTEGER NOT NULL
);

rem ********************************************************************
rem Create the SHIPMENTS table to hold shipment information


CREATE TABLE shipments
(
  shipment_id        INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  store_id           INTEGER NOT NULL,
  customer_id        INTEGER NOT NULL,
  delivery_address   VARCHAR2(512 CHAR) NOT NULL,
  shipment_status    VARCHAR2(100 CHAR) NOT NULL
);

rem ********************************************************************
rem Create the ORDER_ITEMS table to hold order item information for orders


CREATE TABLE order_items
(
  order_id       INTEGER NOT NULL,
  line_item_id   INTEGER NOT NULL,
  product_id     INTEGER NOT NULL,
  unit_price     NUMBER(10,2) NOT NULL,
  quantity       INTEGER NOT NULL,
  shipment_id    INTEGER
);

rem ********************************************************************
rem Create the INVENTORY table to hold inventory information


CREATE TABLE inventory
(
  inventory_id        INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  store_id            INTEGER NOT NULL,
  product_id          INTEGER NOT NULL,
  product_inventory   INTEGER NOT NULL
);

rem ********************************************************************
rem Create views
 
rem ********************************************************************
rem Create indexes


CREATE INDEX customers_name_i          ON customers   ( full_name );
CREATE INDEX orders_customer_id_i      ON orders      ( customer_id );
CREATE INDEX orders_store_id_i         ON orders      ( store_id );
CREATE INDEX shipments_store_id_i      ON shipments   ( store_id );
CREATE INDEX shipments_customer_id_i   ON shipments   ( customer_id );
CREATE INDEX order_items_shipment_id_i ON order_items ( shipment_id );
CREATE INDEX inventory_product_id_i    ON inventory   ( product_id );

rem ********************************************************************
rem Create constraints


ALTER TABLE customers ADD CONSTRAINT customers_pk PRIMARY KEY (customer_id);

ALTER TABLE customers ADD CONSTRAINT customers_email_u UNIQUE (email_address);

ALTER TABLE stores ADD CONSTRAINT stores_pk PRIMARY KEY (store_id);

ALTER TABLE stores ADD CONSTRAINT store_name_u UNIQUE (store_name);

ALTER TABLE stores ADD CONSTRAINT store_at_least_one_address_c
  CHECK (
    web_address IS NOT NULL or physical_address IS NOT NULL
  );

ALTER TABLE products ADD CONSTRAINT products_pk PRIMARY KEY (product_id);

ALTER TABLE products ADD CONSTRAINT products_json_c
                     CHECK ( product_details is json );

ALTER TABLE orders ADD CONSTRAINT orders_pk PRIMARY KEY (order_id);

ALTER TABLE orders ADD CONSTRAINT orders_customer_id_fk
   FOREIGN KEY (customer_id) REFERENCES customers (customer_id);

ALTER TABLE orders ADD CONSTRAINT  orders_status_c
                  CHECK ( order_status in
                    ( 'CANCELLED','COMPLETE','OPEN','PAID','REFUNDED','SHIPPED'));

ALTER TABLE orders ADD CONSTRAINT orders_store_id_fk FOREIGN KEY (store_id)
   REFERENCES stores (store_id);

ALTER TABLE shipments ADD CONSTRAINT shipments_pk PRIMARY KEY (shipment_id);

ALTER TABLE shipments ADD CONSTRAINT shipments_store_id_fk
   FOREIGN KEY (store_id) REFERENCES stores (store_id);

ALTER TABLE shipments ADD CONSTRAINT shipments_customer_id_fk
   FOREIGN KEY (customer_id) REFERENCES customers (customer_id);

ALTER TABLE shipments ADD CONSTRAINT shipment_status_c
                  CHECK ( shipment_status in
                    ( 'CREATED', 'SHIPPED', 'IN-TRANSIT', 'DELIVERED'));

ALTER TABLE order_items ADD CONSTRAINT order_items_pk PRIMARY KEY ( order_id, line_item_id );

ALTER TABLE order_items ADD CONSTRAINT order_items_order_id_fk
   FOREIGN KEY (order_id) REFERENCES orders (order_id);

ALTER TABLE order_items ADD CONSTRAINT order_items_shipment_id_fk
   FOREIGN KEY (shipment_id) REFERENCES shipments (shipment_id);

ALTER TABLE order_items ADD CONSTRAINT order_items_product_id_fk
   FOREIGN KEY (product_id) REFERENCES products (product_id);

ALTER TABLE order_items ADD CONSTRAINT order_items_product_u UNIQUE ( product_id, order_id );

ALTER TABLE inventory ADD CONSTRAINT inventory_pk PRIMARY KEY (inventory_id);

ALTER TABLE inventory ADD CONSTRAINT inventory_store_product_u UNIQUE (store_id, product_id);

ALTER TABLE inventory ADD CONSTRAINT inventory_store_id_fk
   FOREIGN KEY (store_id) REFERENCES stores (store_id);

ALTER TABLE inventory ADD CONSTRAINT inventory_product_id_fk
   FOREIGN KEY (product_id) REFERENCES products (product_id);

rem ********************************************************************
rem Add table column comments


COMMENT ON TABLE customers
  IS 'Details of the people placing orders';

COMMENT ON COLUMN customers.customer_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN customers.email_address
  IS 'The email address the person uses to access the account';

COMMENT ON COLUMN customers.full_name
  IS 'What this customer is called';

COMMENT ON TABLE stores
  IS 'Physical and virtual locations where people can purchase products';

COMMENT ON COLUMN stores.store_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN stores.store_name
  IS 'What the store is called';

COMMENT ON COLUMN stores.web_address
  IS 'The URL of a virtual store';

COMMENT ON COLUMN stores.physical_address
  IS 'The postal address of this location';

COMMENT ON COLUMN stores.latitude
  IS 'The north-south position of a physical store';

COMMENT ON COLUMN stores.longitude
  IS 'The east-west position of a physical store';

COMMENT ON COLUMN stores.logo
  IS 'An image used by this store';

COMMENT ON COLUMN stores.logo_mime_type
  IS 'The mime-type of the store logo';

COMMENT ON COLUMN stores.logo_last_updated
  IS 'The date the image was last changed';

COMMENT ON COLUMN stores.logo_filename
  IS 'The name of the file loaded in the image column';

COMMENT ON COLUMN stores.logo_charset
  IS 'The character set used to encode the image';

COMMENT ON TABLE products
  IS 'Details of goods that customers can purchase';

COMMENT ON COLUMN products.product_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN products.unit_price
  IS 'The monetary value of one item of this product';

COMMENT ON COLUMN products.product_details
  IS 'Further details of the product stored in JSON format';

COMMENT ON COLUMN products.product_image
  IS 'A picture of the product';

COMMENT ON COLUMN products.image_mime_type
  IS 'The mime-type of the product image';

COMMENT ON COLUMN products.image_last_updated
  IS 'The date the image was last changed';

COMMENT ON COLUMN products.image_filename
  IS 'The name of the file loaded in the image column';

COMMENT ON COLUMN products.image_charset
  IS 'The character set used to encode the image';

COMMENT ON COLUMN products.product_name
  IS 'What a product is called';

COMMENT ON TABLE orders
  IS 'Details of who made purchases where';

COMMENT ON COLUMN orders.order_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN orders.order_tms
  IS 'When the order was placed';

COMMENT ON COLUMN orders.customer_id
  IS 'Who placed this order';

COMMENT ON COLUMN orders.store_id
  IS 'Where this order was placed';

COMMENT ON COLUMN orders.order_status
  IS 'What state the order is in. Valid values are:
OPEN - the order is in progress
PAID - money has been received from the customer for this order
SHIPPED - the products have been dispatched to the customer
COMPLETE - the customer has received the order
CANCELLED - the customer has stopped the order
REFUNDED - there has been an issue with the order and the money has been returned to the customer';

COMMENT ON TABLE order_items
  IS 'Details of which products the customer has purchased in an order';

COMMENT ON COLUMN order_items.order_id
  IS 'The order these products belong to';

COMMENT ON COLUMN order_items.line_item_id
  IS 'An incrementing number, starting at one for each order';

COMMENT ON COLUMN order_items.product_id
  IS 'Which item was purchased';

COMMENT ON COLUMN order_items.unit_price
  IS 'How much the customer paid for one item of the product';

COMMENT ON COLUMN order_items.quantity
  IS 'How many items of this product the customer purchased';

COMMENT ON COLUMN order_items.shipment_id
  IS 'Where this product will be delivered';

COMMENT ON TABLE customer_order_products
  IS 'A summary of who placed each order and what they bought';

COMMENT ON COLUMN customer_order_products.order_id
  IS 'The primary key of the order';

COMMENT ON COLUMN customer_order_products.order_tms
  IS 'The date and time the order was placed';

COMMENT ON COLUMN customer_order_products.order_status
  IS 'The current state of this order';

COMMENT ON COLUMN customer_order_products.customer_id
  IS 'The primary key of the customer';

COMMENT ON COLUMN customer_order_products.email_address
  IS 'The email address the person uses to access the account';

COMMENT ON COLUMN customer_order_products.full_name
  IS 'What this customer is called';

COMMENT ON COLUMN customer_order_products.order_total
  IS 'The total amount the customer paid for the order';

COMMENT ON COLUMN customer_order_products.items
  IS 'A comma-separated list naming the products in this order';

COMMENT ON TABLE store_orders
  IS 'A summary of what was purchased at each location, including summaries each store, order status and overall total';

COMMENT ON COLUMN store_orders.order_status
  IS 'The current state of this order';

COMMENT ON COLUMN store_orders.total
  IS 'Indicates what type of total is displayed, including Store, Status, or Grand Totals';

COMMENT ON COLUMN store_orders.store_name
  IS 'What the store is called';

COMMENT ON COLUMN store_orders.latitude
  IS 'The north-south position of a physical store';

COMMENT ON COLUMN store_orders.longitude
  IS 'The east-west position of a physical store';

COMMENT ON COLUMN store_orders.address
  IS 'The physical or virtual location of this store';

COMMENT ON COLUMN store_orders.total_sales
  IS 'The total value of orders placed';

COMMENT ON COLUMN store_orders.order_count
  IS 'The total number of orders placed';

COMMENT ON TABLE product_reviews
  IS 'A relational view of the reviews stored in the JSON for each product';

COMMENT ON COLUMN product_reviews.product_name
  IS 'What this product is called';

COMMENT ON COLUMN product_reviews.rating
  IS 'The review score the customer has placed. Range is 1-10';

COMMENT ON COLUMN product_reviews.avg_rating
  IS 'The mean of the review scores for this product';

COMMENT ON COLUMN product_reviews.review
  IS 'The text of the review';

COMMENT ON TABLE product_orders
  IS 'A summary of the state of the orders placed for each product';

COMMENT ON COLUMN product_orders.product_name
  IS 'What this product is called';

COMMENT ON COLUMN product_orders.order_status
  IS 'The current state of these order';

COMMENT ON COLUMN product_orders.total_sales
  IS 'The total value of orders placed';

COMMENT ON COLUMN product_orders.order_count
  IS 'The total number of orders placed';

COMMENT ON TABLE shipments
  IS 'Details of where ordered goods will be delivered';

COMMENT ON COLUMN shipments.shipment_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN shipments.store_id
  IS 'Which location the goods will be transported from';

COMMENT ON COLUMN shipments.customer_id
  IS 'Who this shipment is for';

COMMENT ON COLUMN shipments.delivery_address
  IS 'Where the goods will be transported to';

COMMENT ON COLUMN shipments.shipment_status
  IS 'The current status of the shipment. Valid values are:
CREATED - the shipment is ready for order assignment
SHIPPED - the goods have been dispatched
IN-TRANSIT - the goods are en-route to their destination
DELIVERED - the good have arrived at their destination';

COMMENT ON TABLE inventory
  IS 'Details of the quantity of stock available for products at each location';

COMMENT ON COLUMN inventory.inventory_id
  IS 'Auto-incrementing primary key';

COMMENT ON COLUMN inventory.store_id
  IS 'Which location the goods are located at';

COMMENT ON COLUMN inventory.product_id
  IS 'Which item this stock is for';

COMMENT ON COLUMN inventory.product_inventory
  IS 'The current quantity in stock';